name: "Submit to Web Store"
on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'
  workflow_dispatch:

jobs:
  build:
    name: Build extension
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./extension

    steps:
      - uses: actions/checkout@v4

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: true

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          # https://github.com/actions/setup-node/issues/706
          cache-dependency-path: "extension"

      - name: Build the extension
        run: pnpm build

      - name: Package the extension into a zip artifact
        run: pnpm package

      - name: Store the packages
        uses: actions/upload-artifact@v4
        with:
          name: extension-builds
          path: extension/build/

  store-publish:
    name: Publish to store
    runs-on: ubuntu-latest

    # Only publish on tag pushes
    if: startsWith(github.ref, 'refs/tags/')

    needs:
      - build

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: extension-builds
          path: extension/build/

      - name: Browser platform publish
        uses: PlasmoHQ/bpp@v3
        with:
          keys: ${{ secrets.BPP_KEYS }}

  github-release:
    name: GitHub Release
    runs-on: ubuntu-latest

    # Only publish on tag pushes
    if: startsWith(github.ref, 'refs/tags/')

    needs:
      - build

    permissions:
      # IMPORTANT: mandatory for making GitHub Releases
      contents: write

    steps:
      # checkout is required for gh cli to work
      - uses: actions/checkout@v4

      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: extension-builds
          path: extension/build/

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --notes ""

      - name: Upload artifacts to GitHub Release
        env:
          GH_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          '${{ github.ref_name }}' extension/build/*.zip
          --repo '${{ github.repository }}'
